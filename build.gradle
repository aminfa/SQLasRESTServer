buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
        	srcDir 'conf'
        	srcDir 'resources'
    	}
    }
	test {
	   	java {
	   		srcDir 'src/test/java'
	   	}
    }
}

//Java version
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

    def excludeLog4j = {
        exclude module: 'log4j-to-slf4j'
        exclude module: 'log4j-api'
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
        exclude module: 'slf4j-log4j12'

    }
    
	// dependencies for development time
 	compile ('ai.libs:jaicore-basic:0.2.1', excludeLog4j) 
 	
 	compile("mysql:mysql-connector-java:8.0.19", excludeLog4j) 
 	
 	compile("commons-codec:commons-codec:1.11", excludeLog4j)

	compile("org.springframework.boot:spring-boot-starter-data-jpa", excludeLog4j)

    compile("org.springframework.boot:spring-boot-starter-web", excludeLog4j)

	compileOnly("org.projectlombok:lombok", excludeLog4j)

	annotationProcessor("org.projectlombok:lombok", excludeLog4j) 
	
	compile("org.apache.httpcomponents:httpclient:4.5.10", excludeLog4j)

    runtime("org.springframework.boot:spring-boot-devtools")
    
    testCompile("junit:junit")
}

bootJar {
	archiveBaseName.set 'sql-rest-server'
	archiveVersion.set '0.1.0'
}

configurations {
}

eclipse {
	project.natures "org.eclipse.buildship.core.gradleprojectnature"
}

repositories {
	mavenCentral()
}

bootRun {
    workingDir = rootDir.getAbsolutePath()
}